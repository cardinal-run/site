---
interface Props {
}

const {  } = Astro.props;
---

<div class="subscribe">
    <form id="form">
        <input type="email" id="email" name="fields[email]" placeholder="Enter your email" autocomplete="email">
        <button type="submit" class="button" id="subscribe">Subscribe</button>
        <button disabled="disabled" type="submit" class="button hidden" id="subscribing">Subscribing...</button>
    </form>
    <div id="success" class="hidden">
        <h4>You have succesfuly joined the waiting list!</h4>
    </div>
</div>

<script>
    document.getElementById('form')?.addEventListener('submit', async (e) =>{ 
        e.preventDefault();
        document.getElementById('email')?.classList.remove('error');

        document.getElementById('subscribe')?.classList.add('hidden');
        document.getElementById('subscribing')?.classList.remove('hidden');

        const data = new FormData(e.target as HTMLFormElement);
        const response = await fetch('https://assets.mailerlite.com/jsonp/1079721/forms/130812863422923920/subscribe', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },    
            body: new URLSearchParams(data as any),
        });
        const {success, errors} = await response.json();
        if (success) {
            document.getElementById('form')?.classList.add('hidden');
            return document.getElementById('success')?.classList.remove('hidden');
        } else {
            document.getElementById('email')?.classList.add('error');
            document.getElementById('subscribe')?.classList.remove('hidden');
            document.getElementById('subscribing')?.classList.add('hidden');
        }
    });
</script>

<style>
    input {
        text-align: start;
        display: inline;
        background-color: #ffffff !important;
        border-color: #ffffff;
        border-style: solid !important;
        border-width: 1px !important;
        border-radius: 4px !important;
        box-shadow: none;
        font-size: 1rem !important;
        line-height: 1rem !important;
        margin: 0;
        padding: 0.75rem 1rem !important;
        box-sizing: border-box !important;
        height: auto;
        text-decoration: none;
        width: 100% !important;
    }
    input.error {
        box-shadow: inset 0 0 0 2px rgb(var(--accent-light));
    }
    .subscribe {
        max-width: 400px;
        width: 100%;
    }
    #form {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        flex-direction: row;
    }
    #success h4 {
        margin: 0;
    }
    .hidden {
        display: none !important;
    }

    @media only screen and (max-width: 400px) {
        #form {
			flex-direction: column;
        }
        input {
            width: 100%;
        }
        .button {
            width: 100% !important;
        }
    }
</style>
